// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StaffPortalAPI.Persistence.Data;

#nullable disable

namespace StaffPortalAPI.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StaffPortalAPI.Domain.Models.Entities.Customer", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("25e5d007-f9b6-4995-a956-f1d02d523e68"),
                            Email = "ja@cust.com",
                            FirstName = "Alex",
                            IsActive = true,
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = new Guid("1c670d26-7bfa-4166-b8a6-e4cb553276a8"),
                            Email = "pb@cust.com",
                            FirstName = "Porscha",
                            IsActive = true,
                            LastName = "Brooks"
                        },
                        new
                        {
                            Id = new Guid("af66a506-e063-436c-83e2-977d5a9738f2"),
                            Email = "jw@cust.com",
                            FirstName = "Jason",
                            IsActive = true,
                            LastName = "Wilson"
                        },
                        new
                        {
                            Id = new Guid("56026187-1fe2-4226-b0ad-e79400b4b135"),
                            Email = "at@cust.com",
                            FirstName = "Amy",
                            IsActive = true,
                            LastName = "Tanner"
                        },
                        new
                        {
                            Id = new Guid("c8632c45-3092-46d7-b505-4b72e92a4568"),
                            Email = "gh@cust.com",
                            FirstName = "Gerald",
                            IsActive = true,
                            LastName = "Heathcliff"
                        },
                        new
                        {
                            Id = new Guid("cdd1637d-ab61-460c-8ea9-d0ff76b97823"),
                            Email = "re@cust.com",
                            FirstName = "Roberto",
                            IsActive = true,
                            LastName = "Elizando"
                        },
                        new
                        {
                            Id = new Guid("45d83057-4e05-4760-912f-c8c6cea2412a"),
                            Email = "jv@cust.com",
                            FirstName = "Jason",
                            IsActive = true,
                            LastName = "Voorhees"
                        },
                        new
                        {
                            Id = new Guid("b1dfb958-bcc4-4851-b6c3-3771da76d3f1"),
                            Email = "fk@cust.com",
                            FirstName = "Frederick",
                            IsActive = true,
                            LastName = "Kruger"
                        },
                        new
                        {
                            Id = new Guid("03e2bb33-498d-4a2e-bf1c-365a87ec2f92"),
                            Email = "mm@cust.com",
                            FirstName = "Mike",
                            IsActive = true,
                            LastName = "Meyers"
                        },
                        new
                        {
                            Id = new Guid("01fbf862-f4a6-47f4-988d-a85c639e5149"),
                            Email = "ws@cust.com",
                            FirstName = "Will",
                            IsActive = true,
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = new Guid("fbce3708-22d1-4a05-8738-fc1199b0c1be"),
                            Email = "ai@cust.com",
                            FirstName = "Allen",
                            IsActive = true,
                            LastName = "Iverson"
                        });
                });

            modelBuilder.Entity("StaffPortalAPI.Domain.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TokenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TokenExpires")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
